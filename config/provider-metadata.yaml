name: opensearch-project/opensearch
resources:
    OpenSearch Provider:
        subCategory: ""
        description: The provider is used to interact with the resources supported by OpenSearch.
        name: OpenSearch Provider
        title: OpenSearch Provider
        argumentDocs:
            aws_access_key: (String) The access key for use with AWS OpenSearch Service domains
            aws_assume_role_arn: (String) Amazon Resource Name of an IAM Role to assume prior to making AWS API calls.
            aws_assume_role_external_id: (String) External ID configured in the IAM policy of the IAM Role to assume prior to making AWS API calls.
            aws_profile: (String) The AWS profile for use with AWS OpenSearch Service domains
            aws_region: (String) The AWS region for use in signing of AWS OpenSearch requests. Must be specified in order to use AWS URL signing with AWS OpenSearch endpoint exposed on a custom DNS domain.
            aws_secret_key: (String) The secret key for use with AWS OpenSearch Service domains
            aws_signature_service: (String) AWS service name used in the credential scope of signed requests to opensearch.
            aws_token: (String) The session token for use with AWS OpenSearch Service domains
            cacert_file: (String) A Custom CA certificate
            client_cert_path: (String) A X509 certificate to connect to opensearch
            client_key_path: (String) A X509 key to connect to opensearch
            healthcheck: (Boolean) Set the client healthcheck option for the opensearch client. Healthchecking is designed for direct access to the cluster.
            host_override: (String) If provided, sets the 'Host' header of requests and the 'ServerName' for certificate validation to this value. See the documentation on connecting to opensearch via an SSH tunnel.
            insecure: (Boolean) Disable SSL verification of API calls
            opensearch_version: (String) opensearch Version
            password: (String) Password to use to connect to opensearch using basic auth
            proxy: (String) Proxy URL to use for requests to opensearch.
            sign_aws_requests: (Boolean) Enable signing of AWS opensearch requests. The url must refer to AWS ES domain (*.<region>.es.amazonaws.com), or aws_region must be specified explicitly.
            sniff: (Boolean) Set the node sniffing option for the opensearch client. Client won't work with sniffing if nodes are not routable.
            token: (String) A bearer token or ApiKey for an Authorization header, e.g. Active Directory API key.
            token_name: (String) The type of token, usually ApiKey or Bearer
            url: (String) OpenSearch URL
            username: (String) Username to use to connect to opensearch using basic auth
            version_ping_timeout: (Number) Version ping timeout in seconds
        importStatements:
            - |-
              $ export AWS_ACCESS_KEY_ID="anaccesskey"
              $ export AWS_SECRET_ACCESS_KEY="asecretkey"
              $ terraform plan
    opensearch_anomaly_detection:
        subCategory: ""
        description: Provides an OpenSearch anonaly detection. Please refer to the OpenSearch anomaly detection documentation for details.
        name: opensearch_anomaly_detection
        title: opensearch_anomaly_detection Resource - terraform-provider-opensearch
        examples:
            - name: foo
              manifest: |-
                {
                  "body": "{\n  \"name\": \"foo\",\n  \"description\": \"Test detector\",\n  \"time_field\": \"@timestamp\",\n  \"indices\": [\n    \"security-auditlog*\"\n  ],\n  \"feature_attributes\": [\n    {\n      \"feature_name\": \"test\",\n      \"feature_enabled\": true,\n      \"aggregation_query\": {\n        \"test\": {\n          \"value_count\": {\n            \"field\": \"audit_category.keyword\"\n          }\n        }\n      }\n    }\n  ],\n  \"filter_query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"range\": {\n            \"value\": {\n              \"gt\": 1\n            }\n          }\n        }\n      ],\n      \"adjust_pure_negative\": true,\n      \"boost\": 1\n    }\n  },\n  \"detection_interval\": {\n    \"period\": {\n      \"interval\": 1,\n      \"unit\": \"Minutes\"\n    }\n  },\n  \"window_delay\": {\n    \"period\": {\n      \"interval\": 1,\n      \"unit\": \"Minutes\"\n    }\n  },\n  \"result_index\" : \"opensearch-ad-plugin-result-test\"\n}\n"
                }
        argumentDocs:
            body: (String) The anomaly detection document
            id: (String) The ID of this resource.
        importStatements: []
    opensearch_audit_config:
        subCategory: ""
        name: opensearch_audit_config
        title: opensearch_audit_config Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "audit": [
                    {
                      "disabled_rest_categories": [
                        "GRANTED_PRIVILEGES",
                        "AUTHENTICATED"
                      ],
                      "disabled_transport_categories": [
                        "GRANTED_PRIVILEGES",
                        "AUTHENTICATED"
                      ],
                      "enable_rest": true,
                      "enable_transport": true,
                      "exclude_sensitive_headers": true,
                      "ignore_requests": [
                        "SearchRequest",
                        "indices:data/read/*",
                        "/_cluster/health"
                      ],
                      "ignore_users": [
                        "dashboardserver"
                      ],
                      "log_request_body": true,
                      "resolve_bulk_requests": true,
                      "resolve_indices": true
                    }
                  ],
                  "compliance": [
                    {
                      "enabled": true,
                      "external_config": false,
                      "internal_config": true,
                      "read_ignore_users": [
                        "read-ignore-1"
                      ],
                      "read_metadata_only": true,
                      "read_watched_field": [
                        {
                          "fields": [
                            "field-1",
                            "field-2"
                          ],
                          "index": "read-index-1"
                        },
                        {
                          "fields": [
                            "field-3"
                          ],
                          "index": "read-index-2"
                        }
                      ],
                      "write_ignore_users": [
                        "write-ignore-1"
                      ],
                      "write_log_diffs": false,
                      "write_metadata_only": true,
                      "write_watched_indices": [
                        "write-index-1",
                        "write-index-2",
                        "log-*",
                        "*"
                      ]
                    }
                  ],
                  "enabled": true
                }
        argumentDocs:
            audit: '(Block Set, Max: 1) (see below for nested schema)'
            compliance: '(Block Set, Max: 1) (see below for nested schema)'
            disabled_rest_categories: (Set of String)
            disabled_transport_categories: (Set of String)
            enable_rest: (Boolean)
            enable_transport: (Boolean)
            enabled: (Boolean)
            exclude_sensitive_headers: (Boolean)
            external_config: (Boolean)
            fields: (Set of String)
            id: (String) The ID of this resource.
            ignore_requests: (Set of String)
            ignore_users: (Set of String)
            index: (String)
            internal_config: (Boolean)
            log_request_body: (Boolean)
            read_ignore_users: (Set of String)
            read_metadata_only: (Boolean)
            read_watched_field: (Block Set) (see below for nested schema)
            resolve_bulk_requests: (Boolean)
            resolve_indices: (Boolean)
            write_ignore_users: (Set of String)
            write_log_diffs: (Boolean)
            write_metadata_only: (Boolean)
            write_watched_indices: (Set of String)
        importStatements:
            - |-
              # Import by name
              terraform import opensearch_audit_config.test_config my-config
    opensearch_channel_configuration Resource - terraform-provider-opensearch:
        subCategory: ""
        description: Provides an OpenSearch channel configuration. Please refer to the OpenSearch channel configuration documentation for details.
        name: opensearch_channel_configuration Resource - terraform-provider-opensearch
        title: opensearch_channel_configuration Resource - terraform-provider-opensearch
        argumentDocs:
            body: (String) The channel configuration document
            id: (String) The ID of this resource.
        importStatements: []
    opensearch_cluster_settings:
        subCategory: ""
        description: Manages a cluster's (persistent) settings.
        name: opensearch_cluster_settings
        title: opensearch_cluster_settings Resource - terraform-provider-opensearch
        examples:
            - name: global
              manifest: |-
                {
                  "action_auto_create_index": "my-index-000001,index10,-index1*,+ind*",
                  "cluster_max_shards_per_node": 10
                }
        argumentDocs:
            action_auto_create_index: (String) Whether to automatically create an index if it doesnâ€™t already exist and apply any configured index template
            action_destructive_requires_name: (Boolean) When set to true, you must specify the index name to delete an index and it is not possible to delete all indices with _all or use wildcards
            cluster_blocks_read_only: (Boolean) Make the whole cluster read only and metadata is not allowed to be modified
            cluster_blocks_read_only_allow_delete: (Boolean) Make the whole cluster read only, but allows to delete indices to free up resources
            cluster_indices_close_enable: (Boolean) If false, you cannot close open indices
            cluster_info_update_interval: (String) A time string controlling how often OpenSearch should check on disk usage for each node in the cluster
            cluster_max_shards_per_node: (Number) The total number of primary and replica shards for the cluster, this number is multiplied by the number of non-frozen data nodes; shards for closed indices do not count toward this limit
            cluster_max_shards_per_node_frozen: (Number) The total number of primary and replica frozen shards, for the cluster; Ssards for closed indices do not count toward this limit, a cluster with no frozen data nodes is unlimited.
            cluster_no_master_block: (String) Specifies which operations are rejected when there is no active master in a cluster (all, write)
            cluster_persistent_tasks_allocation_enable: (String) Whether allocation for persistent tasks is active (all, none)
            cluster_persistent_tasks_allocation_recheck_interval: (String) A time string controling how often assignment checks are performed to react to whether persistent tasks can be assigned to nodes
            cluster_routing_allocation_allow_rebalance: (String) Specify when shard rebalancing is allowed (always, indices_primaries_active, indices_all_active)
            cluster_routing_allocation_awareness_attributes: (String) Use custom node attributes to take hardware configuration into account when allocating shards
            cluster_routing_allocation_balance_index: (Number) Weight factor for the number of shards per index allocated on a node, increasing this raises the tendency to equalize the number of shards per index across all nodes
            cluster_routing_allocation_balance_shard: (Number) Weight factor for the total number of shards allocated on a node, increasing this raises the tendency to equalize the number of shards across all nodes
            cluster_routing_allocation_balance_threshold: (Number) Minimal optimization value of operations that should be performed, raising this will cause the cluster to be less aggressive about optimizing the shard balance
            cluster_routing_allocation_cluster_concurrent_rebalance: (Number) How many concurrent shard rebalances are allowed cluster wide
            cluster_routing_allocation_disk_include_relocations: (Boolean) Whether the allocator will take into account shards that are currently being relocated to the target node when computing a nodeâ€™s disk usage
            cluster_routing_allocation_disk_threshold_enabled: (Boolean) Whether the disk allocation decider is active
            cluster_routing_allocation_disk_watermark_high: (String) Allocator will attempt to relocate shards away from a node whose disk usage is above this percentage disk used
            cluster_routing_allocation_disk_watermark_low: (String) Allocator will not allocate shards to nodes that have more than this percentage disk used
            cluster_routing_allocation_enable: (String) Enable or disable allocation for specific kinds of shards (all, primaries, new_primaries, none)
            cluster_routing_allocation_node_concurrent_incoming_recoveries: (Number) How many incoming recoveries where the target shard (likely the replica unless a shard is relocating) are allocated on the node
            cluster_routing_allocation_node_concurrent_outgoing_recoveries: (Number) How many outgoing recoveries where the source shard (likely the primary unless a shard is relocating) are allocated on the node
            cluster_routing_allocation_node_concurrent_recoveries: (Number) A shortcut to set both incoming and outgoing recoveries
            cluster_routing_allocation_node_initial_primaries_recoveries: (Number) Set a (usually) higher rate for primary recovery on node restart (usually from disk, so fast)
            cluster_routing_allocation_same_shard_host: (Boolean) Perform a check to prevent allocation of multiple instances of the same shard on a single host, if multiple nodes are started on the host
            cluster_routing_allocation_total_shards_per_node: (Number) Maximum number of primary and replica shards allocated to each node
            cluster_routing_rebalance_enable: (String) Allow rebalancing for specific kinds of shards (all, primaries, replicas, none)
            id: (String) The ID of this resource.
            indices_breaker_fielddata_limit: (String) The percentage of memory above which if loading a field into the field data cache would cause the cache to exceed this limit, an error is returned
            indices_breaker_fielddata_overhead: (Number) A constant that all field data estimations are multiplied by
            indices_breaker_request_limit: (String) The percentabge of memory above which per-request data structures (e.g. calculating aggregations) are prevented from exceeding
            indices_breaker_request_overhead: (Number) A constant that all request estimations are multiplied by
            indices_breaker_total_limit: (String) The percentage of total amount of memory that can be used across all breakers
            indices_recovery_max_bytes_per_sec: (String) Maximum total inbound and outbound recovery traffic for each node, in mb
            network_breaker_inflight_requests_limit: (String) The percentage limit of memory usage on a node of all currently active incoming requests on transport or HTTP level
            network_breaker_inflight_requests_overhead: (Number) A constant that all in flight requests estimations are multiplied by
            script_max_compilations_rate: (String) Limit for the number of unique dynamic scripts within a certain interval that are allowed to be compiled, expressed as compilations divided by a time string
            search_default_search_timeout: (String) A time string setting a cluster-wide default timeout for all search requests
        importStatements: []
    opensearch_component_template:
        subCategory: ""
        description: Component templates are building blocks for constructing index templates that specify index mappings, settings, and aliases. You cannot directly apply a component template to a data stream or index. To be applied, a component template must be included in an index templateâ€™s composed_of list.
        name: opensearch_component_template
        title: opensearch_component_template Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "body": "{\n  \"template\": {\n    \"settings\": {\n      \"index\": {\n        \"number_of_shards\": 1\n      }\n    },\n    \"mappings\": {\n      \"properties\": {\n        \"host_name\": {\n          \"type\": \"keyword\"\n        },\n        \"created_at\": {\n          \"type\": \"date\",\n          \"format\": \"EEE MMM dd HH:mm:ss Z yyyy\"\n        }\n      }\n    },\n    \"aliases\": {\n      \"mydata\": { }\n    }\n  }\n}\n",
                  "name": "terraform-test"
                }
        argumentDocs:
            body: (String) The JSON body of the template.
            id: (String) The ID of this resource.
            name: (String) Name of the component template to create.
        importStatements:
            - |-
              # Import by name
              terraform import opensearch_component_template.test terraform-test
    opensearch_composable_index_template:
        subCategory: ""
        description: Provides an Composable index template resource. This resource uses the /_index_template endpoint of the API that is available since version 2.0.0. Use opensearch_index_template if you are using older versions or if you want to keep using legacy Index Templates.
        name: opensearch_composable_index_template
        title: opensearch_composable_index_template Resource - terraform-provider-opensearch
        examples:
            - name: template_1
              manifest: |-
                {
                  "body": "{\n  \"index_patterns\": [\"te*\", \"bar*\"],\n  \"template\": {\n    \"settings\": {\n      \"index\": {\n        \"number_of_shards\": 1\n      }\n    },\n    \"mappings\": {\n      \"properties\": {\n        \"host_name\": {\n          \"type\": \"keyword\"\n        },\n        \"created_at\": {\n          \"type\": \"date\",\n          \"format\": \"EEE MMM dd HH:mm:ss Z yyyy\"\n        }\n      }\n    },\n    \"aliases\": {\n      \"mydata\": { }\n    }\n  },\n  \"priority\": 200,\n  \"version\": 3\n}\n",
                  "name": "template_1"
                }
        argumentDocs:
            body: (String) The JSON body of the index template.
            id: (String) The ID of this resource.
            name: (String) The name of the index template.
        importStatements:
            - terraform import opensearch_composable_index_template.template_1 template_1
    opensearch_dashboard_object:
        subCategory: ""
        description: Provides an OpenSearch Dashboards object resource. This resource interacts directly with the underlying OpenSearch index backing Dashboards, so the format must match what Dashboards the version of Dashboards is expecting. Dashboards with older versions - directly pulling the JSON from a Dashboards index of the same version of OpenSearch targeted by the provider is a workaround.
        name: opensearch_dashboard_object
        title: opensearch_dashboard_object Resource - terraform-provider-opensearch
        examples:
            - name: test_visualization_v6
              manifest: |-
                {
                  "body": "[\n  {\n    \"_id\": \"visualization:response-time-percentile\",\n    \"_type\": \"doc\",\n    \"_source\": {\n      \"type\": \"visualization\",\n      \"visualization\": {\n        \"title\": \"Total response time percentiles\",\n        \"visState\": \"{\\\"title\\\":\\\"Total response time percentiles\\\",\\\"type\\\":\\\"line\\\",\\\"params\\\":{\\\"addTooltip\\\":true,\\\"addLegend\\\":true,\\\"legendPosition\\\":\\\"right\\\",\\\"showCircles\\\":true,\\\"interpolate\\\":\\\"linear\\\",\\\"scale\\\":\\\"linear\\\",\\\"drawLinesBetweenPoints\\\":true,\\\"radiusRatio\\\":9,\\\"times\\\":[],\\\"addTimeMarker\\\":false,\\\"defaultYExtents\\\":false,\\\"setYExtents\\\":false},\\\"aggs\\\":[{\\\"id\\\":\\\"1\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"percentiles\\\",\\\"schema\\\":\\\"metric\\\",\\\"params\\\":{\\\"field\\\":\\\"app.total_time\\\",\\\"percents\\\":[50,90,95]}},{\\\"id\\\":\\\"2\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"date_histogram\\\",\\\"schema\\\":\\\"segment\\\",\\\"params\\\":{\\\"field\\\":\\\"@timestamp\\\",\\\"interval\\\":\\\"auto\\\",\\\"customInterval\\\":\\\"2h\\\",\\\"min_doc_count\\\":1,\\\"extended_bounds\\\":{}}},{\\\"id\\\":\\\"3\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"terms\\\",\\\"schema\\\":\\\"group\\\",\\\"params\\\":{\\\"field\\\":\\\"system.syslog.program\\\",\\\"size\\\":5,\\\"order\\\":\\\"desc\\\",\\\"orderBy\\\":\\\"_term\\\"}}],\\\"listeners\\\":{}}\",\n        \"uiStateJSON\": \"{}\",\n        \"description\": \"\",\n        \"version\": 1\n      }\n    }\n  }\n]\n"
                }
            - name: test_visualization_v7
              manifest: |-
                {
                  "body": "[\n  {\n    \"_id\": \"response-time-percentile\",\n    \"_source\": {\n      \"type\": \"visualization\",\n      \"visualization\": {\n        \"title\": \"Total response time percentiles\",\n        \"visState\": \"{\\\"title\\\":\\\"Total response time percentiles\\\",\\\"type\\\":\\\"line\\\",\\\"params\\\":{\\\"addTooltip\\\":true,\\\"addLegend\\\":true,\\\"legendPosition\\\":\\\"right\\\",\\\"showCircles\\\":true,\\\"interpolate\\\":\\\"linear\\\",\\\"scale\\\":\\\"linear\\\",\\\"drawLinesBetweenPoints\\\":true,\\\"radiusRatio\\\":9,\\\"times\\\":[],\\\"addTimeMarker\\\":false,\\\"defaultYExtents\\\":false,\\\"setYExtents\\\":false},\\\"aggs\\\":[{\\\"id\\\":\\\"1\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"percentiles\\\",\\\"schema\\\":\\\"metric\\\",\\\"params\\\":{\\\"field\\\":\\\"app.total_time\\\",\\\"percents\\\":[50,90,95]}},{\\\"id\\\":\\\"2\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"date_histogram\\\",\\\"schema\\\":\\\"segment\\\",\\\"params\\\":{\\\"field\\\":\\\"@timestamp\\\",\\\"interval\\\":\\\"auto\\\",\\\"customInterval\\\":\\\"2h\\\",\\\"min_doc_count\\\":1,\\\"extended_bounds\\\":{}}},{\\\"id\\\":\\\"3\\\",\\\"enabled\\\":true,\\\"type\\\":\\\"terms\\\",\\\"schema\\\":\\\"group\\\",\\\"params\\\":{\\\"field\\\":\\\"system.syslog.program\\\",\\\"size\\\":5,\\\"order\\\":\\\"desc\\\",\\\"orderBy\\\":\\\"_term\\\"}}],\\\"listeners\\\":{}}\",\n        \"uiStateJSON\": \"{}\",\n        \"description\": \"\",\n        \"version\": 1\n      }\n    }\n  }\n]\n"
                }
            - name: test_index_pattern_v6
              manifest: |-
                {
                  "body": "[\n  {\n    \"_id\": \"index-pattern:cloudwatch\",\n    \"_type\": \"doc\",\n    \"_source\": {\n      \"type\": \"index-pattern\",\n      \"index-pattern\": {\n        \"title\": \"cloudwatch-*\",\n        \"timeFieldName\": \"timestamp\"\n      }\n    }\n  }\n]\n"
                }
            - name: test_index_pattern_v7
              manifest: |-
                {
                  "body": "[\n  {\n    \"_id\": \"index-pattern:cloudwatch\",\n    \"_type\": \"doc\",\n    \"_source\": {\n      \"type\": \"index-pattern\",\n      \"index-pattern\": {\n        \"title\": \"cloudwatch-*\",\n        \"timeFieldName\": \"timestamp\"\n      }\n    }\n  }\n]\n"
                }
        argumentDocs:
            body: (String) The JSON body of the dashboard object.
            id: (String) The ID of this resource.
            index: (String) The name of the index where dashboard data is stored.
        importStatements: []
    opensearch_dashboard_tenant:
        subCategory: ""
        description: Provides an OpenSearch dashboard tenant resource. Please refer to the OpenSearch documentation for details.
        name: opensearch_dashboard_tenant
        title: opensearch_dashboard_tenant Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "description": "test tenant",
                  "tenant_name": "test"
                }
        argumentDocs:
            description: (String) Description of the tenant.
            id: (String) The ID of this resource.
            index: (String)
            tenant_name: (String) The name of the tenant.
        importStatements:
            - terraform import opensearch_dashboard_tenant.writer test
    opensearch_data_stream:
        subCategory: ""
        description: A data stream lets you store append-only time series data across multiple (hidden, auto-generated) indices while giving you a single named resource for requests
        name: opensearch_data_stream
        title: opensearch_data_stream Resource - terraform-provider-opensearch
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${opensearch_composable_index_template.foo}"
                  ],
                  "name": "foo-data-stream"
                }
              dependencies:
                opensearch_composable_index_template.foo: |-
                    {
                      "body": "{\n  \"index_patterns\": [\"foo-data-stream*\"],\n  \"data_stream\": {}\n}\n",
                      "name": "foo-template"
                    }
        argumentDocs:
            id: (String) The ID of this resource.
            name: (String) Name of the data stream to create, must have a matching
        importStatements: []
    opensearch_host Data Source - terraform-provider-opensearch:
        subCategory: ""
        description: opensearch_host can be used to retrieve the host URL for the provider's current cluster.
        name: opensearch_host Data Source - terraform-provider-opensearch
        title: opensearch_host Data Source - terraform-provider-opensearch
        argumentDocs:
            active: (Boolean) should be set to true
            id: (String) The ID of this resource.
            url: (String) the url of the active cluster
        importStatements: []
    opensearch_index:
        subCategory: ""
        description: Provides an OpenSearch index resource.
        name: opensearch_index
        title: opensearch_index Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "mappings": "{\n  \"people\": {\n    \"_all\": {\n      \"enabled\": false\n    },\n    \"properties\": {\n      \"email\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n",
                  "name": "terraform-test",
                  "number_of_replicas": 1,
                  "number_of_shards": 1
                }
        argumentDocs:
            aliases: (String) A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
            analysis_analyzer: (String) A JSON string describing the analyzers applied to the index.
            analysis_char_filter: (String) A JSON string describing the char_filters applied to the index.
            analysis_filter: (String) A JSON string describing the filters applied to the index.
            analysis_normalizer: (String) A JSON string describing the normalizers applied to the index.
            analysis_tokenizer: (String) A JSON string describing the tokenizers applied to the index.
            analyze_max_token_count: (String) The maximum number of tokens that can be produced using _analyze API. A stringified number.
            auto_expand_replicas: (String) Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
            blocks_metadata: (Boolean) Set to true to disable index metadata reads and writes.
            blocks_read: (Boolean) Set to true to disable read operations against the index.
            blocks_read_only: (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            blocks_read_only_allow_delete: (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
            blocks_write: (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
            codec: (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
            default_pipeline: (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
            force_destroy: (Boolean) A boolean that indicates that the index should be deleted even if it contains documents.
            gc_deletes: (String) The length of time that a deleted document's version number remains available for further versioned operations.
            highlight_max_analyzed_offset: (String) The maximum number of characters that will be analyzed for a highlight request. A stringified number.
            id: (String) The ID of this resource.
            include_type_name: (String) A string that indicates if and what we should pass to include_type_name parameter. Set to "false" when trying to create an index on a v6 cluster without a doc type or set to "true" when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
            index_knn: (Boolean) Indicates whether the index should build native library indices for the knn_vector fields. If set to false, the knn_vector fields will be stored in doc values, but Approximate k-NN search functionality will be disabled.
            index_knn_algo_param_ef_search: (String) The size of the dynamic list used during k-NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib implementation.
            index_similarity_default: (String) A JSON string describing the default index similarity config.
            indexing_slowlog_level: '(String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace'
            indexing_slowlog_source: (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
            indexing_slowlog_threshold_index_debug: (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
            indexing_slowlog_threshold_index_info: (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
            indexing_slowlog_threshold_index_trace: (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
            indexing_slowlog_threshold_index_warn: (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
            load_fixed_bitset_filters_eagerly: (Boolean) Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
            mappings: (String) A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
            max_docvalue_fields_search: (String) The maximum number of docvalue_fields that are allowed in a query. A stringified number.
            max_inner_result_window: (String) The maximum value of from + size for inner hits definition and top hits aggregations to this index. A stringified number.
            max_ngram_diff: (String) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
            max_refresh_listeners: (String) Maximum number of refresh listeners available on each shard of the index. A stringified number.
            max_regex_length: (String) The maximum length of regex that can be used in Regexp Query. A stringified number.
            max_rescore_window: (String) The maximum value of window_size for rescore requests in searches of this index. A stringified number.
            max_result_window: (String) The maximum value of from + size for searches to this index. A stringified number.
            max_script_fields: (String) The maximum number of script_fields that are allowed in a query. A stringified number.
            max_shingle_diff: (String) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
            max_terms_count: (String) The maximum number of terms that can be used in Terms Query. A stringified number.
            name: (String) Name of the index to create
            number_of_replicas: (String) Number of shard replicas. A stringified number.
            number_of_routing_shards: (String) Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
            number_of_shards: (String) Number of shards for the index. This can be set only on creation.
            refresh_interval: (String) How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to -1 to disable refresh.
            rollover_alias: (String)
            routing_allocation_enable: '(String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.'
            routing_partition_size: (String) The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
            routing_rebalance_enable: '(String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.'
            search_idle_after: (String) How long a shard can not receive a search or get request until itâ€™s considered search idle.
            search_slowlog_level: '(String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace'
            search_slowlog_threshold_fetch_debug: (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
            search_slowlog_threshold_fetch_info: (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
            search_slowlog_threshold_fetch_trace: (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
            search_slowlog_threshold_fetch_warn: (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
            search_slowlog_threshold_query_debug: (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
            search_slowlog_threshold_query_info: (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
            search_slowlog_threshold_query_trace: (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
            search_slowlog_threshold_query_warn: (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
            shard_check_on_startup: (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
            sort_field: (String) The field to sort shards in this index by.
            sort_order: (String) The direction to sort shards in. Accepts asc, desc.
        importStatements:
            - |-
              # Import by name
              terraform import opensearch_index.test terraform-test
    opensearch_index_template:
        subCategory: ""
        description: Provides an OpenSearch index template resource.
        name: opensearch_index_template
        title: opensearch_index_template Resource - terraform-provider-opensearch
        examples:
            - name: template_1
              manifest: |-
                {
                  "body": "{\n  \"template\": \"te*\",\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"type1\": {\n      \"_source\": {\n        \"enabled\": false\n      },\n      \"properties\": {\n        \"host_name\": {\n          \"type\": \"keyword\"\n        },\n        \"created_at\": {\n          \"type\": \"date\",\n          \"format\": \"EEE MMM dd HH:mm:ss Z YYYY\"\n        }\n      }\n    }\n  }\n}\n",
                  "name": "template_1"
                }
        argumentDocs:
            body: (String) The JSON body of the index template.
            id: (String) The ID of this resource.
            name: (String) The name of the index template.
        importStatements:
            - terraform import opensearch_index_template.template_1 template_1
    opensearch_ingest_pipeline:
        subCategory: ""
        description: Provides an OpenSearch ingest pipeline resource.
        name: opensearch_ingest_pipeline
        title: opensearch_ingest_pipeline Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "body": "{\n  \"description\" : \"describe pipeline\",\n  \"version\": 123,\n  \"processors\" : [\n    {\n      \"set\" : {\n        \"field\": \"foo\",\n        \"value\": \"bar\"\n      }\n    }\n  ]\n}\n",
                  "name": "terraform-test"
                }
        argumentDocs:
            body: (String) The JSON body of the ingest pipeline
            id: (String) The ID of this resource.
            name: (String) The name of the ingest pipeline
        importStatements:
            - terraform import opensearch_ingest_pipeline.test terraform-test
    opensearch_ism_policy:
        subCategory: ""
        description: Provides an OpenSearch Index State Management (ISM) policy. Please refer to the OpenSearch ISM documentation for details.
        name: opensearch_ism_policy
        title: opensearch_ism_policy Resource - terraform-provider-opensearch
        examples:
            - name: cleanup
              manifest: |-
                {
                  "body": "${file(\"${path.module}/policies/delete_after_15d.json\")}",
                  "policy_id": "delete_after_15d"
                }
        argumentDocs:
            body: (String) The policy document.
            id: (String) The ID of this resource.
            policy_id: (String) The id of the ISM policy.
            primary_term: (Number) The primary term of the ISM policy version.
            seq_no: (Number) The sequence number of the ISM policy version.
        importStatements:
            - terraform import opensearch_ism_policy.cleanup delete_after_15d
    opensearch_ism_policy_mapping:
        subCategory: ""
        description: Provides an OpenSearch Index State Management (ISM) policy. Please refer to the OpenSearch ISM documentation for details.
        name: opensearch_ism_policy_mapping
        title: opensearch_ism_policy_mapping Resource - terraform-provider-opensearch
        examples:
            - name: test
              manifest: |-
                {
                  "indexes": "test_index",
                  "policy_id": "policy_1",
                  "state": "delete"
                }
        argumentDocs:
            create: (String)
            id: (String) The ID of this resource.
            include: (Set of Map of String) When updating multiple indices, you might want to include a state filter to only affect certain managed indices. The background process only applies the change if the index is currently in the state specified.
            indexes: (String) Name of the index to apply the policy to. You can use an index pattern to update multiple indices at once.
            is_safe: (Boolean)
            managed_indexes: (Set of String)
            policy_id: (String) The name of the policy.
            state: (String) After a change in policy takes place, specify the state for the index to transition to
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - |-
              # Import by poilcy_id
              terraform import opensearch_ism_policy_mapping.test policy_1
    opensearch_monitor:
        subCategory: ""
        description: Provides an OpenSearch monitor. Please refer to the OpenSearch monitor documentation for details.
        name: opensearch_monitor
        title: opensearch_monitor Resource - terraform-provider-opensearch
        examples:
            - name: movies_last_hour
              manifest: |-
                {
                  "body": "{\n  \"name\": \"test-monitor\",\n  \"type\": \"monitor\",\n  \"enabled\": true,\n  \"schedule\": {\n    \"period\": {\n      \"interval\": 1,\n      \"unit\": \"MINUTES\"\n    }\n  },\n  \"inputs\": [{\n    \"search\": {\n      \"indices\": [\"movies\"],\n      \"query\": {\n        \"size\": 0,\n        \"aggregations\": {},\n        \"query\": {\n          \"bool\": {\n            \"adjust_pure_negative\":true,\n            \"boost\":1,\n            \"filter\": [{\n              \"range\": {\n                \"@timestamp\": {\n                  \"boost\":1,\n                  \"from\":\"||-1h\",\n                  \"to\":\"\",\n                  \"include_lower\":true,\n                  \"include_upper\":true,\n                  \"format\": \"epoch_millis\"\n                }\n              }\n            }]\n          }\n        }\n      }\n    }\n  }],\n  \"triggers\": [\n    {\n      \"name\" : \"Errors\",\n      \"severity\" : \"1\",\n      \"condition\" : {\n        \"script\" : {\n          \"source\" : \"ctx.results[0].hits.total.value \u003e 0\",\n          \"lang\" : \"painless\"\n        }\n      },\n      \"actions\" : [\n        {\n          \"name\" : \"Slack\",\n          \"destination_id\" : \"${opensearch_destination.slack_on_call_channel.id}\",\n          \"message_template\" : {\n            \"source\" : \"bogus\",\n            \"lang\" : \"mustache\"\n          },\n          \"throttle_enabled\" : false,\n          \"subject_template\" : {\n            \"source\" : \"Production Errors\",\n            \"lang\" : \"mustache\"\n          }\n        }\n      ]\n    }\n  ]\n}\n"
                }
        argumentDocs:
            body: (String) The monitor document
            id: (String) The ID of this resource.
        importStatements:
            - terraform import opensearch_monitor.alert lgOZb3UB96pyyRQv0ppQ
    opensearch_role:
        subCategory: ""
        description: Provides an OpenSearch security role resource. Please refer to the OpenSearch Access Control documentation for details.
        name: opensearch_role
        title: opensearch_role Resource - terraform-provider-opensearch
        examples:
            - name: writer
              manifest: |-
                {
                  "cluster_permissions": [
                    "*"
                  ],
                  "description": "Logs writer role",
                  "index_permissions": [
                    {
                      "allowed_actions": [
                        "write"
                      ],
                      "index_patterns": [
                        "logstash-*"
                      ]
                    }
                  ],
                  "role_name": "logs_writer",
                  "tenant_permissions": [
                    {
                      "allowed_actions": [
                        "write"
                      ],
                      "tenant_patterns": [
                        "logstash-*"
                      ]
                    }
                  ]
                }
            - name: writer
              manifest: |-
                {
                  "cluster_permissions": [
                    "*"
                  ],
                  "index_permissions": [
                    {
                      "allowed_actions": [
                        "read"
                      ],
                      "document_level_security": "{\"term\": { \"readable_by\": \"${user.name}\"}}",
                      "index_patterns": [
                        "pub*"
                      ]
                    }
                  ],
                  "role_name": "foo_writer"
                }
        argumentDocs:
            allowed_actions: (Set of String) A list of allowed actions.
            cluster_permissions: (Set of String) A list of cluster permissions.
            description: (String) Description of the role.
            document_level_security: (String) A selector for document-level security (json formatted using jsonencode).
            field_level_security: (Set of String) A list of selectors for field-level security.
            id: (String) The ID of this resource.
            index_patterns: (Set of String) A list of glob patterns for the index names.
            index_permissions: (Block Set) A configuration of index permissions (see below for nested schema)
            masked_fields: (Set of String) A list of masked fields
            role_name: (String) The name of the security role.
            tenant_patterns: (Set of String) A list of glob patterns for the tenant names
            tenant_permissions: (Block Set) A configuration of tenant permissions (see below for nested schema)
        importStatements:
            - terraform import opensearch_role.writer logs_writer
    opensearch_roles_mapping:
        subCategory: ""
        description: Provides an OpenSearch security role mapping. Please refer to the OpenSearch Access Control documentation for details.
        name: opensearch_roles_mapping
        title: opensearch_roles_mapping Resource - terraform-provider-opensearch
        examples:
            - name: mapper
              manifest: |-
                {
                  "backend_roles": [
                    "arn:aws:iam::123456789012:role/lambda-call-opensearch",
                    "arn:aws:iam::123456789012:role/run-containers"
                  ],
                  "description": "Mapping AWS IAM roles to ES role",
                  "role_name": "logs_writer"
                }
        argumentDocs:
            and_backend_roles: (Set of String) A list of backend roles.
            backend_roles: (Set of String) A list of backend roles.
            description: (String) Description of the role mapping.
            hosts: (Set of String) A list of host names.
            id: (String) The ID of this resource.
            role_name: (String) The name of the security role.
            users: (Set of String) A list of users.
        importStatements:
            - terraform import opensearch_roles_mapping.mapper logs_writer
    opensearch_script:
        subCategory: ""
        description: Provides an OpenSearch script resource.
        name: opensearch_script
        title: opensearch_script Resource - terraform-provider-opensearch
        examples:
            - name: test_script
              manifest: |-
                {
                  "lang": "painless",
                  "script_id": "my_script",
                  "source": "Math.log(_score * 2) + params.my_modifier"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            lang: (String) Specifies the language the script is written in. Defaults to painless.
            script_id: (String) Identifier for the stored script. Must be unique within the cluster.
            source: (String) The source of the stored script
        importStatements:
            - terraform import opensearch_script.test_script my_script
    opensearch_sm_policy:
        subCategory: ""
        description: Provides an OpenSearch Snapshot Management (SM) policy. Please refer to the OpenSearch SM documentation for details.
        name: opensearch_sm_policy
        title: opensearch_sm_policy Resource - terraform-provider-opensearch
        examples:
            - name: snapshot_to_s3
              manifest: |-
                {
                  "body": "${jsonencode({\n    \"enabled\"     = true\n    \"description\" = \"My snapshot policy\"\n\n    \"creation\" = {\n      \"schedule\" = {\n        \"cron\" = {\n          \"expression\" = \"0 0 * * *\"\n          \"timezone\"   = \"UTC\"\n        }\n      }\n\n      \"time_limit\" = \"1h\"\n    }\n\n    \"deletion\" = {\n      \"schedule\" = {\n        \"cron\" = {\n          \"expression\" = \"0 0 * * *\"\n          \"timezone\"   = \"UTC\"\n        }\n      }\n\n      \"condition\" = {\n        \"max_age\"   = \"14d\"\n        \"max_count\" = 400\n        \"min_count\" = 1\n      }\n\n      \"time_limit\" = \"1h\"\n    }\n\n    \"snapshot_config\" = {\n      \"timezone\"   = \"UTC\"\n      \"indices\"    = \"*\"\n      \"repository\" = opensearch_snapshot_repository.repo.name\n    }\n  })}",
                  "policy_name": "snapshot_to_s3"
                }
              dependencies:
                opensearch_snapshot_repository.repo: |-
                    {
                      "name": "os-index-backups",
                      "settings": {
                        "bucket": "${module.s3_snapshot.s3_bucket_id}",
                        "region": "${module.s3_snapshot.s3_bucket_region}",
                        "role_arn": "${aws_iam_role.snapshot_create.arn}",
                        "server_side_encryption": true
                      },
                      "type": "s3"
                    }
        argumentDocs:
            body: (String) The policy document.
            id: (String) The ID of this resource.
            policy_name: (String) The name of the SM policy.
            primary_term: (Number) The primary term of the SM policy version.
            seq_no: (Number) The sequence number of the SM policy version.
        importStatements:
            - terraform import opensearch_sm_policy.cleanup snapshot_to_s3
    opensearch_snapshot_repository:
        subCategory: ""
        description: Provides an OpenSearch snapshot repository resource.
        name: opensearch_snapshot_repository
        title: opensearch_snapshot_repository Resource - terraform-provider-opensearch
        examples:
            - name: repo
              manifest: |-
                {
                  "name": "es-index-backups",
                  "settings": {
                    "bucket": "es-index-backups",
                    "region": "us-east-1",
                    "role_arn": "arn:aws:iam::123456789012:role/MyRole"
                  },
                  "type": "s3"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            name: (String) The name of the repository.
            settings: (Map of String) The settings map applicable for the backend, see official documentation for plugins.
            type: (String) The name of the repository backend (required plugins must be installed).
        importStatements:
            - terraform import opensearch_snapshot_repository.repo es-index-backups
    opensearch_user:
        subCategory: ""
        description: Provides an OpenSearch security user. Please refer to the OpenSearch Access Control documentation for details.
        name: opensearch_user
        title: opensearch_user Resource - terraform-provider-opensearch
        examples:
            - name: mapper
              manifest: |-
                {
                  "description": "a reader role for our app",
                  "password": "SuperSekret123!",
                  "username": "app-reasdder"
                }
              dependencies:
                opensearch_role.reader: |-
                    {
                      "description": "App Reader Role",
                      "index_permissions": [
                        {
                          "allowed_actions": [
                            "get",
                            "read",
                            "search"
                          ],
                          "index_patterns": [
                            "app-*"
                          ]
                        }
                      ],
                      "role_name": "app_reader"
                    }
                opensearch_roles_mapping.reader: |-
                    {
                      "description": "App Reader Role",
                      "role_name": "${opensearch_role.reader.id}",
                      "users": [
                        "${opensearch_user.reader.id}"
                      ]
                    }
            - name: reader
              manifest: |-
                {
                  "password": "${var.password}",
                  "username": "app-reader"
                }
              references:
                password: var.password
              dependencies:
                opensearch_role.reader: |-
                    {
                      "description": "App Reader Role",
                      "index_permissions": [
                        {
                          "allowed_actions": [
                            "get",
                            "read",
                            "search"
                          ],
                          "index_patterns": [
                            "app-*"
                          ]
                        }
                      ],
                      "role_name": "app_reader"
                    }
                opensearch_roles_mapping.reader: |-
                    {
                      "description": "App Reader Role",
                      "role_name": "${opensearch_role.reader.id}",
                      "users": [
                        "${opensearch_user.reader.id}"
                      ]
                    }
        argumentDocs:
            attributes: (Map of String) A map of arbitrary key value string pairs stored alongside of users.
            backend_roles: (Set of String) A list of backend roles.
            description: (String) Description of the user.
            id: (String) The ID of this resource.
            password: (String, Sensitive) The plain text password for the user, cannot be specified with password_hash. Some implementations may enforce a password policy. Invalid passwords may cause a non-descriptive HTTP 400 Bad Request error. For AWS OpenSearch domains "password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character".
            password_hash: (String, Sensitive) The pre-hashed password for the user, cannot be specified with password.
            username: (String) The name of the security user.
        importStatements:
            - terraform import opensearch_user.reader app_reader
