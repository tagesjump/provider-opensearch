// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IndexInitParameters struct {

	// (String) A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	// A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	Aliases *string `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (String) The maximum number of tokens that can be produced using _analyze API. A stringified number.
	// The maximum number of tokens that can be produced using _analyze API. A stringified number.
	AnalyzeMaxTokenCount *string `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	// (Boolean) A boolean that indicates that the index should be deleted even if it contains documents.
	// A boolean that indicates that the index should be deleted even if it contains documents.
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (String) The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	// The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	HighlightMaxAnalyzedOffset *string `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (String) A string that indicates if and what we should pass to include_type_name parameter. Set to "false" when trying to create an index on a v6 cluster without a doc type or set to "true" when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	// A string that indicates if and what we should pass to include_type_name parameter. Set to `"false"` when trying to create an index on a v6 cluster without a doc type or set to `"true"` when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	IncludeTypeName *string `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// NN search functionality will be disabled.
	// Indicates whether the index should build native library indices for the knn_vector fields. If set to false, the knn_vector fields will be stored in doc values, but Approximate k-NN search functionality will be disabled.
	IndexKnn *bool `json:"indexKnn,omitempty" tf:"index_knn,omitempty"`

	// NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib implementation.
	// The size of the dynamic list used during k-NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib.
	IndexKnnAlgoParamEfSearch *string `json:"indexKnnAlgoParamEfSearch,omitempty" tf:"index_knn_algo_param_ef_search,omitempty"`

	// (String) A JSON string describing the default index similarity config.
	// A JSON string describing the default index similarity config.
	IndexSimilarityDefault *string `json:"indexSimilarityDefault,omitempty" tf:"index_similarity_default,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (String) A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	// A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) The maximum number of docvalue_fields that are allowed in a query. A stringified number.
	// The maximum number of `docvalue_fields` that are allowed in a query. A stringified number.
	MaxDocvalueFieldsSearch *string `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (String) The maximum value of from + size for inner hits definition and top hits aggregations to this index. A stringified number.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. A stringified number.
	MaxInnerResultWindow *string `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (String) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	MaxNgramDiff *string `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (String) Maximum number of refresh listeners available on each shard of the index. A stringified number.
	// Maximum number of refresh listeners available on each shard of the index. A stringified number.
	MaxRefreshListeners *string `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (String) The maximum length of regex that can be used in Regexp Query. A stringified number.
	// The maximum length of regex that can be used in Regexp Query. A stringified number.
	MaxRegexLength *string `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (String) The maximum value of window_size for rescore requests in searches of this index. A stringified number.
	// The maximum value of `window_size` for `rescore` requests in searches of this index. A stringified number.
	MaxRescoreWindow *string `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (String) The maximum value of from + size for searches to this index. A stringified number.
	// The maximum value of `from + size` for searches to this index. A stringified number.
	MaxResultWindow *string `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (String) The maximum number of script_fields that are allowed in a query. A stringified number.
	// The maximum number of `script_fields` that are allowed in a query. A stringified number.
	MaxScriptFields *string `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (String) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	MaxShingleDiff *string `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (String) The maximum number of terms that can be used in Terms Query. A stringified number.
	// The maximum number of terms that can be used in Terms Query. A stringified number.
	MaxTermsCount *string `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index to create
	// Name of the index to create
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Number of shard replicas. A stringified number.
	// Number of shard replicas. A stringified number.
	NumberOfReplicas *string `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (String) Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	NumberOfRoutingShards *string `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (String) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	NumberOfShards *string `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String)
	RolloverAlias *string `json:"rolloverAlias,omitempty" tf:"rollover_alias,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (String) The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	// The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	RoutingPartitionSize *string `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	SortField *string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	SortOrder *string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`
}

type IndexObservation struct {

	// (String) A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	// A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	Aliases *string `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (String) The maximum number of tokens that can be produced using _analyze API. A stringified number.
	// The maximum number of tokens that can be produced using _analyze API. A stringified number.
	AnalyzeMaxTokenCount *string `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	// (Boolean) A boolean that indicates that the index should be deleted even if it contains documents.
	// A boolean that indicates that the index should be deleted even if it contains documents.
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (String) The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	// The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	HighlightMaxAnalyzedOffset *string `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) A string that indicates if and what we should pass to include_type_name parameter. Set to "false" when trying to create an index on a v6 cluster without a doc type or set to "true" when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	// A string that indicates if and what we should pass to include_type_name parameter. Set to `"false"` when trying to create an index on a v6 cluster without a doc type or set to `"true"` when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	IncludeTypeName *string `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// NN search functionality will be disabled.
	// Indicates whether the index should build native library indices for the knn_vector fields. If set to false, the knn_vector fields will be stored in doc values, but Approximate k-NN search functionality will be disabled.
	IndexKnn *bool `json:"indexKnn,omitempty" tf:"index_knn,omitempty"`

	// NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib implementation.
	// The size of the dynamic list used during k-NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib.
	IndexKnnAlgoParamEfSearch *string `json:"indexKnnAlgoParamEfSearch,omitempty" tf:"index_knn_algo_param_ef_search,omitempty"`

	// (String) A JSON string describing the default index similarity config.
	// A JSON string describing the default index similarity config.
	IndexSimilarityDefault *string `json:"indexSimilarityDefault,omitempty" tf:"index_similarity_default,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (String) A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	// A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) The maximum number of docvalue_fields that are allowed in a query. A stringified number.
	// The maximum number of `docvalue_fields` that are allowed in a query. A stringified number.
	MaxDocvalueFieldsSearch *string `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (String) The maximum value of from + size for inner hits definition and top hits aggregations to this index. A stringified number.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. A stringified number.
	MaxInnerResultWindow *string `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (String) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	MaxNgramDiff *string `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (String) Maximum number of refresh listeners available on each shard of the index. A stringified number.
	// Maximum number of refresh listeners available on each shard of the index. A stringified number.
	MaxRefreshListeners *string `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (String) The maximum length of regex that can be used in Regexp Query. A stringified number.
	// The maximum length of regex that can be used in Regexp Query. A stringified number.
	MaxRegexLength *string `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (String) The maximum value of window_size for rescore requests in searches of this index. A stringified number.
	// The maximum value of `window_size` for `rescore` requests in searches of this index. A stringified number.
	MaxRescoreWindow *string `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (String) The maximum value of from + size for searches to this index. A stringified number.
	// The maximum value of `from + size` for searches to this index. A stringified number.
	MaxResultWindow *string `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (String) The maximum number of script_fields that are allowed in a query. A stringified number.
	// The maximum number of `script_fields` that are allowed in a query. A stringified number.
	MaxScriptFields *string `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (String) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	MaxShingleDiff *string `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (String) The maximum number of terms that can be used in Terms Query. A stringified number.
	// The maximum number of terms that can be used in Terms Query. A stringified number.
	MaxTermsCount *string `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index to create
	// Name of the index to create
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Number of shard replicas. A stringified number.
	// Number of shard replicas. A stringified number.
	NumberOfReplicas *string `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (String) Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	NumberOfRoutingShards *string `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (String) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	NumberOfShards *string `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String)
	RolloverAlias *string `json:"rolloverAlias,omitempty" tf:"rollover_alias,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (String) The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	// The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	RoutingPartitionSize *string `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	SortField *string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	SortOrder *string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`
}

type IndexParameters struct {

	// (String) A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	// A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.
	// +kubebuilder:validation:Optional
	Aliases *string `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (String) The maximum number of tokens that can be produced using _analyze API. A stringified number.
	// The maximum number of tokens that can be produced using _analyze API. A stringified number.
	// +kubebuilder:validation:Optional
	AnalyzeMaxTokenCount *string `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	// +kubebuilder:validation:Optional
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	// +kubebuilder:validation:Optional
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	// +kubebuilder:validation:Optional
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	// +kubebuilder:validation:Optional
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	// +kubebuilder:validation:Optional
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	// +kubebuilder:validation:Optional
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// +kubebuilder:validation:Optional
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// +kubebuilder:validation:Optional
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	// (Boolean) A boolean that indicates that the index should be deleted even if it contains documents.
	// A boolean that indicates that the index should be deleted even if it contains documents.
	// +kubebuilder:validation:Optional
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	// +kubebuilder:validation:Optional
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (String) The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	// The maximum number of characters that will be analyzed for a highlight request. A stringified number.
	// +kubebuilder:validation:Optional
	HighlightMaxAnalyzedOffset *string `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (String) A string that indicates if and what we should pass to include_type_name parameter. Set to "false" when trying to create an index on a v6 cluster without a doc type or set to "true" when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	// A string that indicates if and what we should pass to include_type_name parameter. Set to `"false"` when trying to create an index on a v6 cluster without a doc type or set to `"true"` when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.
	// +kubebuilder:validation:Optional
	IncludeTypeName *string `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// NN search functionality will be disabled.
	// Indicates whether the index should build native library indices for the knn_vector fields. If set to false, the knn_vector fields will be stored in doc values, but Approximate k-NN search functionality will be disabled.
	// +kubebuilder:validation:Optional
	IndexKnn *bool `json:"indexKnn,omitempty" tf:"index_knn,omitempty"`

	// NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib implementation.
	// The size of the dynamic list used during k-NN searches. Higher values lead to more accurate but slower searches. Only available for nmslib.
	// +kubebuilder:validation:Optional
	IndexKnnAlgoParamEfSearch *string `json:"indexKnnAlgoParamEfSearch,omitempty" tf:"index_knn_algo_param_ef_search,omitempty"`

	// (String) A JSON string describing the default index similarity config.
	// A JSON string describing the default index similarity config.
	// +kubebuilder:validation:Optional
	IndexSimilarityDefault *string `json:"indexSimilarityDefault,omitempty" tf:"index_similarity_default,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	// +kubebuilder:validation:Optional
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	// +kubebuilder:validation:Optional
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	// +kubebuilder:validation:Optional
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (String) A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	// A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider.
	// +kubebuilder:validation:Optional
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) The maximum number of docvalue_fields that are allowed in a query. A stringified number.
	// The maximum number of `docvalue_fields` that are allowed in a query. A stringified number.
	// +kubebuilder:validation:Optional
	MaxDocvalueFieldsSearch *string `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (String) The maximum value of from + size for inner hits definition and top hits aggregations to this index. A stringified number.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. A stringified number.
	// +kubebuilder:validation:Optional
	MaxInnerResultWindow *string `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (String) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.
	// +kubebuilder:validation:Optional
	MaxNgramDiff *string `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (String) Maximum number of refresh listeners available on each shard of the index. A stringified number.
	// Maximum number of refresh listeners available on each shard of the index. A stringified number.
	// +kubebuilder:validation:Optional
	MaxRefreshListeners *string `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (String) The maximum length of regex that can be used in Regexp Query. A stringified number.
	// The maximum length of regex that can be used in Regexp Query. A stringified number.
	// +kubebuilder:validation:Optional
	MaxRegexLength *string `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (String) The maximum value of window_size for rescore requests in searches of this index. A stringified number.
	// The maximum value of `window_size` for `rescore` requests in searches of this index. A stringified number.
	// +kubebuilder:validation:Optional
	MaxRescoreWindow *string `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (String) The maximum value of from + size for searches to this index. A stringified number.
	// The maximum value of `from + size` for searches to this index. A stringified number.
	// +kubebuilder:validation:Optional
	MaxResultWindow *string `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (String) The maximum number of script_fields that are allowed in a query. A stringified number.
	// The maximum number of `script_fields` that are allowed in a query. A stringified number.
	// +kubebuilder:validation:Optional
	MaxScriptFields *string `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (String) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.
	// +kubebuilder:validation:Optional
	MaxShingleDiff *string `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (String) The maximum number of terms that can be used in Terms Query. A stringified number.
	// The maximum number of terms that can be used in Terms Query. A stringified number.
	// +kubebuilder:validation:Optional
	MaxTermsCount *string `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index to create
	// Name of the index to create
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Number of shard replicas. A stringified number.
	// Number of shard replicas. A stringified number.
	// +kubebuilder:validation:Optional
	NumberOfReplicas *string `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (String) Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.
	// +kubebuilder:validation:Optional
	NumberOfRoutingShards *string `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (String) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	// +kubebuilder:validation:Optional
	NumberOfShards *string `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	// +kubebuilder:validation:Optional
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	RolloverAlias *string `json:"rolloverAlias,omitempty" tf:"rollover_alias,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	// +kubebuilder:validation:Optional
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (String) The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	// The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.
	// +kubebuilder:validation:Optional
	RoutingPartitionSize *string `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	// +kubebuilder:validation:Optional
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	// +kubebuilder:validation:Optional
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	// +kubebuilder:validation:Optional
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	// +kubebuilder:validation:Optional
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	// +kubebuilder:validation:Optional
	SortField *string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	// +kubebuilder:validation:Optional
	SortOrder *string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`
}

// IndexSpec defines the desired state of Index
type IndexSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IndexParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IndexInitParameters `json:"initProvider,omitempty"`
}

// IndexStatus defines the observed state of Index.
type IndexStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IndexObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Index is the Schema for the Indexs API. Provides an OpenSearch index resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opensearch}
type Index struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   IndexSpec   `json:"spec"`
	Status IndexStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IndexList contains a list of Indexs
type IndexList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Index `json:"items"`
}

// Repository type metadata.
var (
	Index_Kind             = "Index"
	Index_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Index_Kind}.String()
	Index_KindAPIVersion   = Index_Kind + "." + CRDGroupVersion.String()
	Index_GroupVersionKind = CRDGroupVersion.WithKind(Index_Kind)
)

func init() {
	SchemeBuilder.Register(&Index{}, &IndexList{})
}
