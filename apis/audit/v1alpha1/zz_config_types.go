// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuditInitParameters struct {

	// (Set of String)
	// +listType=set
	DisabledRestCategories []*string `json:"disabledRestCategories,omitempty" tf:"disabled_rest_categories,omitempty"`

	// (Set of String)
	// +listType=set
	DisabledTransportCategories []*string `json:"disabledTransportCategories,omitempty" tf:"disabled_transport_categories,omitempty"`

	// (Boolean)
	EnableRest *bool `json:"enableRest,omitempty" tf:"enable_rest,omitempty"`

	// (Boolean)
	EnableTransport *bool `json:"enableTransport,omitempty" tf:"enable_transport,omitempty"`

	// (Boolean)
	ExcludeSensitiveHeaders *bool `json:"excludeSensitiveHeaders,omitempty" tf:"exclude_sensitive_headers,omitempty"`

	// (Set of String)
	// +listType=set
	IgnoreRequests []*string `json:"ignoreRequests,omitempty" tf:"ignore_requests,omitempty"`

	// (Set of String)
	// +listType=set
	IgnoreUsers []*string `json:"ignoreUsers,omitempty" tf:"ignore_users,omitempty"`

	// (Boolean)
	LogRequestBody *bool `json:"logRequestBody,omitempty" tf:"log_request_body,omitempty"`

	// (Boolean)
	ResolveBulkRequests *bool `json:"resolveBulkRequests,omitempty" tf:"resolve_bulk_requests,omitempty"`

	// (Boolean)
	ResolveIndices *bool `json:"resolveIndices,omitempty" tf:"resolve_indices,omitempty"`
}

type AuditObservation struct {

	// (Set of String)
	// +listType=set
	DisabledRestCategories []*string `json:"disabledRestCategories,omitempty" tf:"disabled_rest_categories,omitempty"`

	// (Set of String)
	// +listType=set
	DisabledTransportCategories []*string `json:"disabledTransportCategories,omitempty" tf:"disabled_transport_categories,omitempty"`

	// (Boolean)
	EnableRest *bool `json:"enableRest,omitempty" tf:"enable_rest,omitempty"`

	// (Boolean)
	EnableTransport *bool `json:"enableTransport,omitempty" tf:"enable_transport,omitempty"`

	// (Boolean)
	ExcludeSensitiveHeaders *bool `json:"excludeSensitiveHeaders,omitempty" tf:"exclude_sensitive_headers,omitempty"`

	// (Set of String)
	// +listType=set
	IgnoreRequests []*string `json:"ignoreRequests,omitempty" tf:"ignore_requests,omitempty"`

	// (Set of String)
	// +listType=set
	IgnoreUsers []*string `json:"ignoreUsers,omitempty" tf:"ignore_users,omitempty"`

	// (Boolean)
	LogRequestBody *bool `json:"logRequestBody,omitempty" tf:"log_request_body,omitempty"`

	// (Boolean)
	ResolveBulkRequests *bool `json:"resolveBulkRequests,omitempty" tf:"resolve_bulk_requests,omitempty"`

	// (Boolean)
	ResolveIndices *bool `json:"resolveIndices,omitempty" tf:"resolve_indices,omitempty"`
}

type AuditParameters struct {

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	DisabledRestCategories []*string `json:"disabledRestCategories,omitempty" tf:"disabled_rest_categories,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	DisabledTransportCategories []*string `json:"disabledTransportCategories,omitempty" tf:"disabled_transport_categories,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	EnableRest *bool `json:"enableRest,omitempty" tf:"enable_rest,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	EnableTransport *bool `json:"enableTransport,omitempty" tf:"enable_transport,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	ExcludeSensitiveHeaders *bool `json:"excludeSensitiveHeaders,omitempty" tf:"exclude_sensitive_headers,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	IgnoreRequests []*string `json:"ignoreRequests,omitempty" tf:"ignore_requests,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	IgnoreUsers []*string `json:"ignoreUsers,omitempty" tf:"ignore_users,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	LogRequestBody *bool `json:"logRequestBody,omitempty" tf:"log_request_body,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	ResolveBulkRequests *bool `json:"resolveBulkRequests,omitempty" tf:"resolve_bulk_requests,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	ResolveIndices *bool `json:"resolveIndices,omitempty" tf:"resolve_indices,omitempty"`
}

type ComplianceInitParameters struct {

	// (Boolean)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean)
	ExternalConfig *bool `json:"externalConfig,omitempty" tf:"external_config,omitempty"`

	// (Boolean)
	InternalConfig *bool `json:"internalConfig,omitempty" tf:"internal_config,omitempty"`

	// (Set of String)
	// +listType=set
	ReadIgnoreUsers []*string `json:"readIgnoreUsers,omitempty" tf:"read_ignore_users,omitempty"`

	// (Boolean)
	ReadMetadataOnly *bool `json:"readMetadataOnly,omitempty" tf:"read_metadata_only,omitempty"`

	// (Block Set) (see below for nested schema)
	ReadWatchedField []ReadWatchedFieldInitParameters `json:"readWatchedField,omitempty" tf:"read_watched_field,omitempty"`

	// (Set of String)
	// +listType=set
	WriteIgnoreUsers []*string `json:"writeIgnoreUsers,omitempty" tf:"write_ignore_users,omitempty"`

	// (Boolean)
	WriteLogDiffs *bool `json:"writeLogDiffs,omitempty" tf:"write_log_diffs,omitempty"`

	// (Boolean)
	WriteMetadataOnly *bool `json:"writeMetadataOnly,omitempty" tf:"write_metadata_only,omitempty"`

	// (Set of String)
	// +listType=set
	WriteWatchedIndices []*string `json:"writeWatchedIndices,omitempty" tf:"write_watched_indices,omitempty"`
}

type ComplianceObservation struct {

	// (Boolean)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean)
	ExternalConfig *bool `json:"externalConfig,omitempty" tf:"external_config,omitempty"`

	// (Boolean)
	InternalConfig *bool `json:"internalConfig,omitempty" tf:"internal_config,omitempty"`

	// (Set of String)
	// +listType=set
	ReadIgnoreUsers []*string `json:"readIgnoreUsers,omitempty" tf:"read_ignore_users,omitempty"`

	// (Boolean)
	ReadMetadataOnly *bool `json:"readMetadataOnly,omitempty" tf:"read_metadata_only,omitempty"`

	// (Block Set) (see below for nested schema)
	ReadWatchedField []ReadWatchedFieldObservation `json:"readWatchedField,omitempty" tf:"read_watched_field,omitempty"`

	// (Set of String)
	// +listType=set
	WriteIgnoreUsers []*string `json:"writeIgnoreUsers,omitempty" tf:"write_ignore_users,omitempty"`

	// (Boolean)
	WriteLogDiffs *bool `json:"writeLogDiffs,omitempty" tf:"write_log_diffs,omitempty"`

	// (Boolean)
	WriteMetadataOnly *bool `json:"writeMetadataOnly,omitempty" tf:"write_metadata_only,omitempty"`

	// (Set of String)
	// +listType=set
	WriteWatchedIndices []*string `json:"writeWatchedIndices,omitempty" tf:"write_watched_indices,omitempty"`
}

type ComplianceParameters struct {

	// (Boolean)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	ExternalConfig *bool `json:"externalConfig,omitempty" tf:"external_config,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	InternalConfig *bool `json:"internalConfig,omitempty" tf:"internal_config,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	ReadIgnoreUsers []*string `json:"readIgnoreUsers,omitempty" tf:"read_ignore_users,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	ReadMetadataOnly *bool `json:"readMetadataOnly,omitempty" tf:"read_metadata_only,omitempty"`

	// (Block Set) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ReadWatchedField []ReadWatchedFieldParameters `json:"readWatchedField,omitempty" tf:"read_watched_field,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	WriteIgnoreUsers []*string `json:"writeIgnoreUsers,omitempty" tf:"write_ignore_users,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	WriteLogDiffs *bool `json:"writeLogDiffs,omitempty" tf:"write_log_diffs,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	WriteMetadataOnly *bool `json:"writeMetadataOnly,omitempty" tf:"write_metadata_only,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	WriteWatchedIndices []*string `json:"writeWatchedIndices,omitempty" tf:"write_watched_indices,omitempty"`
}

type ConfigInitParameters struct {

	// (Block Set, Max: 1) (see below for nested schema)
	Audit []AuditInitParameters `json:"audit,omitempty" tf:"audit,omitempty"`

	// (Block Set, Max: 1) (see below for nested schema)
	Compliance []ComplianceInitParameters `json:"compliance,omitempty" tf:"compliance,omitempty"`

	// (Boolean)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ConfigObservation struct {

	// (Block Set, Max: 1) (see below for nested schema)
	Audit []AuditObservation `json:"audit,omitempty" tf:"audit,omitempty"`

	// (Block Set, Max: 1) (see below for nested schema)
	Compliance []ComplianceObservation `json:"compliance,omitempty" tf:"compliance,omitempty"`

	// (Boolean)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ConfigParameters struct {

	// (Block Set, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Audit []AuditParameters `json:"audit,omitempty" tf:"audit,omitempty"`

	// (Block Set, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Compliance []ComplianceParameters `json:"compliance,omitempty" tf:"compliance,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ReadWatchedFieldInitParameters struct {

	// (Set of String)
	// +listType=set
	Fields []*string `json:"fields,omitempty" tf:"fields,omitempty"`

	// (String)
	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type ReadWatchedFieldObservation struct {

	// (Set of String)
	// +listType=set
	Fields []*string `json:"fields,omitempty" tf:"fields,omitempty"`

	// (String)
	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type ReadWatchedFieldParameters struct {

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	Fields []*string `json:"fields" tf:"fields,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`
}

// ConfigSpec defines the desired state of Config
type ConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConfigInitParameters `json:"initProvider,omitempty"`
}

// ConfigStatus defines the observed state of Config.
type ConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Config is the Schema for the Configs API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opensearch}
type Config struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	Spec   ConfigSpec   `json:"spec"`
	Status ConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConfigList contains a list of Configs
type ConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Config `json:"items"`
}

// Repository type metadata.
var (
	Config_Kind             = "Config"
	Config_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Config_Kind}.String()
	Config_KindAPIVersion   = Config_Kind + "." + CRDGroupVersion.String()
	Config_GroupVersionKind = CRDGroupVersion.WithKind(Config_Kind)
)

func init() {
	SchemeBuilder.Register(&Config{}, &ConfigList{})
}
