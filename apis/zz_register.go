// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/tagesjump/provider-opensearch/apis/anomaly/v1alpha1"
	v1alpha1audit "github.com/tagesjump/provider-opensearch/apis/audit/v1alpha1"
	v1alpha1channel "github.com/tagesjump/provider-opensearch/apis/channel/v1alpha1"
	v1alpha1cluster "github.com/tagesjump/provider-opensearch/apis/cluster/v1alpha1"
	v1alpha1component "github.com/tagesjump/provider-opensearch/apis/component/v1alpha1"
	v1alpha1composable "github.com/tagesjump/provider-opensearch/apis/composable/v1alpha1"
	v1alpha1dashboard "github.com/tagesjump/provider-opensearch/apis/dashboard/v1alpha1"
	v1alpha1data "github.com/tagesjump/provider-opensearch/apis/data/v1alpha1"
	v1alpha1index "github.com/tagesjump/provider-opensearch/apis/index/v1alpha1"
	v1alpha1ingest "github.com/tagesjump/provider-opensearch/apis/ingest/v1alpha1"
	v1alpha1ism "github.com/tagesjump/provider-opensearch/apis/ism/v1alpha1"
	v1alpha1opensearch "github.com/tagesjump/provider-opensearch/apis/opensearch/v1alpha1"
	v1alpha1roles "github.com/tagesjump/provider-opensearch/apis/roles/v1alpha1"
	v1alpha1sm "github.com/tagesjump/provider-opensearch/apis/sm/v1alpha1"
	v1alpha1snapshot "github.com/tagesjump/provider-opensearch/apis/snapshot/v1alpha1"
	v1alpha1apis "github.com/tagesjump/provider-opensearch/apis/v1alpha1"
	v1beta1 "github.com/tagesjump/provider-opensearch/apis/v1beta1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1audit.SchemeBuilder.AddToScheme,
		v1alpha1channel.SchemeBuilder.AddToScheme,
		v1alpha1cluster.SchemeBuilder.AddToScheme,
		v1alpha1component.SchemeBuilder.AddToScheme,
		v1alpha1composable.SchemeBuilder.AddToScheme,
		v1alpha1dashboard.SchemeBuilder.AddToScheme,
		v1alpha1data.SchemeBuilder.AddToScheme,
		v1alpha1index.SchemeBuilder.AddToScheme,
		v1alpha1ingest.SchemeBuilder.AddToScheme,
		v1alpha1ism.SchemeBuilder.AddToScheme,
		v1alpha1opensearch.SchemeBuilder.AddToScheme,
		v1alpha1roles.SchemeBuilder.AddToScheme,
		v1alpha1sm.SchemeBuilder.AddToScheme,
		v1alpha1snapshot.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
